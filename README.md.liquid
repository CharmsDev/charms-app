This is a [Charms](https://charms.dev) app.

It is a simple fungible token managed by a reference NFT. The NFT has a state that specifies the remaining total supply of the tokens available to mint. If you control the NFT, you can mint new tokens.

Build with:
```sh
charms app build
```

The resulting RISC-V binary will show up at
`./target/elf-compilation/riscv32im-succinct-zkvm-elf/release/{{project-name}}` (as well as `./elf/riscv32im-succinct-zkvm-elf`).

Get the verification key for the app with:
```sh
charms app vk
```

Test the app with a simple NFT mint example:

NOTE: this assumes `bitcoind` running and the `bitcoin-cli` command available and able to talk to `bitcoind`.

```sh
alias b=bitcoin-cli

export app_vk=$(charms app vk)

# set to a UTXO you're spending to mint the NFT (you can see what you have by `b listunspent`)
export in_utxo_0="dc78b09d767c8565c4a58a95e7ad5ee22b28fc1685535056a395dc94929cdd5f:1"

export app_id=$(sha256 -s "${in_utxo_0}")
export addr_0=$(b getnewaddress)

cat ./spells/mint-nft.yaml | envsubst | charms app run
```
